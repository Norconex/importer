<!-- 
   Copyright 2010-2021 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.norconex.commons</groupId>
    <artifactId>norconex-commons-maven-parent</artifactId>
    <version>1.0.2</version>
  </parent>  
  <groupId>com.norconex.collectors</groupId>
  <artifactId>norconex-importer</artifactId>
  <version>3.0.1</version>
  <name>Norconex Importer</name>
  
  <properties>
    <commons-compress.version>1.21</commons-compress.version>
    <cxf.version>3.4.5</cxf.version>
    <jdom2.version>2.0.6.1</jdom2.version>
    <jpeg2000-imageio.version>1.4.0</jpeg2000-imageio.version>
    <jsoup.version>1.15.3</jsoup.version>
    <luaj-jse.version>3.0.1</luaj-jse.version>
    <opencsv.version>5.5.2</opencsv.version>
    <tika.version>1.27</tika.version>
    <ucar-jj2000.version>5.4</ucar-jj2000.version>
    <webp-imageio.version>0.1.6</webp-imageio.version>
  </properties>
  <inceptionYear>2009</inceptionYear>

  <repositories>
    
    <!-- The following repo is required for jai-imageio-jpeg2000 support. -->
    <repository>
      <id>apache.snapshots</id>
      <url>http://repository.mygrid.org.uk/artifactory/mygrid-all/</url>
      <!-- url>http://repository.apache.org/snapshots/</url -->
    </repository>

    <!-- The following repo is required for jj2000 support. -->
    <repository>
        <id>unidata-releases</id>
        <name>UNIDATA Releases</name>
        <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-client</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom2</artifactId>
        <version>${jdom2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>${tika.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-translate</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    
    <!-- Required for JPEG JJ200 support. -->
    <dependency>
      <groupId>edu.ucar</groupId>
      <artifactId>jj2000</artifactId>
      <version>${ucar-jj2000.version}</version>
    </dependency>

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${opencsv.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.luaj</groupId>
      <artifactId>luaj-jse</artifactId>
      <version>${luaj-jse.version}</version>
    </dependency>

    <!-- image/webp format -->
    <dependency>
      <groupId>org.sejda.imageio</groupId>
      <artifactId>webp-imageio</artifactId>
      <version>${webp-imageio.version}</version>
    </dependency>

    <dependency>
      <groupId>com.norconex.commons</groupId>
      <artifactId>norconex-commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>com.norconex.commons</groupId>
      <artifactId>norconex-commons-lang</artifactId>
      <classifier>resources</classifier>
      <type>zip</type>
      <scope>provided</scope>
    </dependency>

    <!-- Logging dependencies: -->

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    
    <!-- Tests: -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- This jpeg2000 dep is not distributed due to JPEG 2000 licensing issue.
         It is included here as "test" only so it does not get distributed.
         https://github.com/jai-imageio/jai-imageio-jpeg2000/blob/master/LICENSE-JJ2000.txt
      -->
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-jpeg2000</artifactId>
      <version>${jpeg2000-imageio.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Not included with Tika and required for parsing Visio XML-based files.
         Consider removing (quite big) once included in poi-ooxml-schemas. See:
         https://poi.apache.org/faq.html#faq-N10025
         https://issues.apache.org/jira/browse/TIKA-2094         
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>ooxml-schemas</artifactId>
      <version>1.3</version>
    </dependency>
      -->
    
  </dependencies>
  
  <build>
    <plugins>

      <!-- Until ready: -Dassembly.skipAssembly=true -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
     
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <excludePackageNames>org.*</excludePackageNames>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      
      <!--  Use VM argument -Dgpg.skip=true to disable GPG signing. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-shared-resources</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <classifier>resources</classifier>
              <outputDirectory>${project.build.directory}/shared-resources</outputDirectory>
              <includeArtifactIds>norconex-commons-lang</includeArtifactIds>
              <includeGroupIds>com.norconex.commons</includeGroupIds>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>
  
  <distributionManagement>
    <site>
      <id>norconex-site-deployment</id>
      <url>${site.baseurl}/importer/v3</url>
    </site>
  </distributionManagement>
  
  <url>https://opensource.norconex.com/importer</url>
  <description>Norconex Importer is a Java library and command-line application meant to &quot;parse&quot; and &quot;extract&quot; content out of a computer file as plain text, whatever its format (HTML, PDF, Word, etc). In addition, it allows you to perform any manipulation on the extracted text before importing/using it in your own service or application.</description>
  <issueManagement>
  	<system>GitHub</system>
  	<url>https://github.com/Norconex/importer/issues</url>
  </issueManagement>
  <scm>
    <url>https://github.com/Norconex/importer</url>
    <connection>scm:git:git@github.com:Norconex/importer.git</connection>
    <developerConnection>scm:git:git@github.com:Norconex/importer.git</developerConnection>
  </scm>

</project>