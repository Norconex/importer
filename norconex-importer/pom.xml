<!-- 
   Copyright 2010-2018 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.norconex.collectors</groupId>
  <artifactId>norconex-importer</artifactId>
  <version>3.0.0-SNAPSHOT</version>
  <name>Norconex Importer</name>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <site.baseurl/>
    <tika.version>1.19.1</tika.version>
    <!-- ALREADY 2.0.11 in Tika 1.19:      -->
    <pdfbox.version>2.0.11</pdfbox.version>
    <norconex-commons-lang.version>2.0.0-SNAPSHOT</norconex-commons-lang.version>
  </properties>
  <inceptionYear>2009</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <repositories>
    <repository>
      <id>sonatype.oss.snapshots</id>
      <name>Sonatype OSS Snapshot Repository</name>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository> 
    
    <!-- The following repo is required for jai-imageio-jpeg2000 support. -->
    <repository>
      <id>apache.snapshots</id>
      <url>http://repository.mygrid.org.uk/artifactory/mygrid-all/</url>
      <!-- url>http://repository.apache.org/snapshots/</url -->
    </repository>

    <!-- The following repo is required for jj2000 support. -->
    <repository>
        <id>unidata-releases</id>
        <name>UNIDATA Releases</name>
        <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/</url>
    </repository>
  </repositories>

  <dependencies>

    <!-- === Fix transitive dependencies versions: === -->
    
    
    <!-- PDFBox dependencies (2.0.11 included in Tika 1.19):
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${pdfbox.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox-tools</artifactId>
      <version>${pdfbox.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>xmpbox</artifactId>
      <version>${pdfbox.version}</version>
    </dependency>

    <!-- 1.11.3 included by Tika 1.19:
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.10.3</version>
    </dependency>
     -->
    <!-- 
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.11.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>4.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.6</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.9.9</version>
    </dependency>
     -->

    <!-- Required for JPEG JJ200 support.
     -->
    <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>jj2000</artifactId>
        <version>5.3</version>
    </dependency>

    <!-- Ensures correct version of xmlbeans, as ooxml-schemas 
        (required for Visio-XML parsing) brings it down.
        
        Tika 1.19 brings version 3.x:
        
    <dependency>
      <groupId>org.apache.xmlbeans</groupId>
      <artifactId>xmlbeans</artifactId>
      <version>2.6.0</version>
    </dependency>
      -->
    
    <!-- === Other dependencies: === -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.norconex.commons</groupId>
    	<artifactId>norconex-commons-lang</artifactId>
    	<version>${norconex-commons-lang.version}</version>
    </dependency>
    <dependency>
        <groupId>com.norconex.commons</groupId>
        <artifactId>norconex-commons-lang</artifactId>
        <version>${norconex-commons-lang.version}</version>
        <classifier>resources</classifier>
        <type>zip</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>    
    <dependency>
    	<groupId>org.apache.tika</groupId>
    	<artifactId>tika-core</artifactId>
    	<version>${tika.version}</version>
    </dependency>
    <dependency>
    	<groupId>org.apache.tika</groupId>
    	<artifactId>tika-parsers</artifactId>
    	<version>${tika.version}</version>
    	<exclusions>
    	  <exclusion>
    	    <groupId>org.slf4j</groupId>
    	    <artifactId>slf4j-log4j12</artifactId>
    	  </exclusion>
    	</exclusions>
    </dependency>
    <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-translate</artifactId>
        <version>${tika.version}</version>
    </dependency>
    <dependency>
    	<groupId>commons-cli</groupId>
    	<artifactId>commons-cli</artifactId>
    	<version>1.4</version>
    </dependency>
    <dependency>
    	<groupId>commons-jxpath</groupId>
    	<artifactId>commons-jxpath</artifactId>
    	<version>1.3</version>
    </dependency>
    
    <!-- Should these be tests or not? -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.10.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.10.0</version>
      <scope>test</scope>
    </dependency>
    
    <!-- 
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.12</version>
    </dependency>
     -->
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
        <groupId>org.luaj</groupId>
        <artifactId>luaj-jse</artifactId>
        <version>3.0.1</version>
    </dependency>




    <!-- jai-imageio deps are required for JPEG2000 and TIFF support
         (including for PDFBox 2.x containing those images).
      -->
    <dependency>
        <groupId>com.github.jai-imageio</groupId>
        <artifactId>jai-imageio-core</artifactId>
        <version>1.3.1</version>
    </dependency>
    <!-- This jpeg2000 dep is not distributed due to JPEG 2000 licensing issue.
         It is included here as "test" only so it does not get distributed.
         https://github.com/jai-imageio/jai-imageio-jpeg2000/blob/master/LICENSE-JJ2000.txt
      -->
    <dependency>
        <groupId>com.github.jai-imageio</groupId>
        <artifactId>jai-imageio-jpeg2000</artifactId>
        <version>1.3.0</version>
        <scope>test</scope>
    </dependency>

    <!-- TODO: Version 3 is migrated to pdf-box project and has been 
         relicensed to ASL.  Include it here instead once released
         (no longer "test").
    
         Java ImageIO plugin for JBIG2 support (often found in PDF) 
         This jbig2 dep is not distributed due to licensing issue (GPLV3).
         It is included here as "test" only so it does not get distributed.
         https://github.com/levigo/jbig2-imageio
    <dependency>
        <groupId>com.levigo.jbig2</groupId>
        <artifactId>levigo-jbig2-imageio</artifactId>
        <version>1.6.5</version>
        <scope>test</scope>
    </dependency>
      -->

    <!-- Not included with Tika and required for parsing Visio XML-based files.
         Consider removing (quite big) once included in poi-ooxml-schemas. See:
         https://poi.apache.org/faq.html#faq-N10025
         https://issues.apache.org/jira/browse/TIKA-2094         
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>ooxml-schemas</artifactId>
      <version>1.3</version>
    </dependency>
      -->
    
  </dependencies>
  
  <build>
    <resources>
        <resource>
            <directory>${project.build.testSourceDirectory}</directory>
            <includes>
                <include>**</include>
            </includes>
        </resource>
        <resource>
            <filtering>false</filtering>
            <directory>${project.build.sourceDirectory}</directory>
            <includes>
                <include>**</include>
            </includes>
            <excludes>
                <exclude>**/*.java</exclude>
            </excludes>
        </resource>
        <resource>
            <filtering>false</filtering>
            <directory>src/main/resources</directory>
            <includes>
                <include>**</include>
            </includes>
        </resource>
    </resources>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0</version>
      </extension>
    </extensions>
    <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <generateReports>true</generateReports>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <templateFile>
                      ${basedir}/src/site/skinless.vm
                    </templateFile>
                </configuration>
                <dependencies>
                  <dependency>
                    <groupId>org.apache.velocity</groupId>
                    <artifactId>velocity</artifactId>
                    <version>1.7</version>
                  </dependency>
                  <dependency>
                    <groupId>org.apache.maven.doxia</groupId>
                    <artifactId>doxia-site-renderer</artifactId>
                    <version>1.4</version>
                  </dependency>
                  <dependency>
                    <groupId>org.apache.maven.doxia</groupId>
                    <artifactId>doxia-module-markdown</artifactId>
                    <version>1.4</version>
                  </dependency>
                </dependencies>    
            </plugin>
        </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>download-licenses</id>
            <goals>
              <goal>download-licenses</goal>
            </goals>
          </execution>
          <execution>
            <id>create-license-list</id>
            <goals>
              <goal>add-third-party</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/dist.xml</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <configuration>
          <overview>${basedir}/src/main/javadoc/overview.html</overview>
          <show>protected</show>
          <detectLinks>false</detectLinks>
          <links>
            <link>https://tika.apache.org/${tika.version}/api/</link>
            <link>https://www.norconex.com/product/commons-lang/apidocs/</link>
          </links>
          <source>1.8</source>
          <excludePackageNames>org.apache.tika.*</excludePackageNames>
        </configuration>
        <executions>
          <execution>
            <id>make-javadoc</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <archive>                   
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
          <excludes>
            <exclude>THIRD-PARTY.txt</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--  Use VM argument -Dgpg.skip=true to disable GPG signing. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>id.post-site</id>
            <phase>post-site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>Remove useless site files</echo>
                <delete dir="${project.build.directory}/site/css" />
                <delete dir="${project.build.directory}/site/images" />
                <delete file="${project.build.directory}/site/project-reports.html" />
                <copy file="${basedir}/src/changes/changes.xml" todir="${project.build.directory}/site/"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.3</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>false</autoReleaseAfterClose>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>unpack-shared-resources</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <classifier>resources</classifier>
              <outputDirectory>${project.build.directory}/shared-resources</outputDirectory>
              <includeArtifacIds>norconex-commons-lang</includeArtifacIds>
              <includeGroupIds>com.norconex.commons</includeGroupIds>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
  <distributionManagement>
    <site>
      <id>norconex-site-deployment</id>
      <url>${site.baseurl}/collectors/importer/latest</url>
    </site>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.7</version>
        <reportSets>
          <reportSet>
            <reports>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <overview>${basedir}/src/main/javadoc/overview.html</overview>
          <header><![CDATA[
            <style>div.aboutLanguage .siteLink {font-size: 2em;}</style>
            <span class="siteLink">
              <a target="_top" href="https://www.norconex.com/collectors/importer">Norconex Importer</a>
            </span>
            ]]>
          </header>
          <footer><![CDATA[
            <script type="text/javascript">
              var _gaq = _gaq || [];
              _gaq.push(['_setAccount', 'UA-23162620-1']);
              _gaq.push(['_setDomainName', 'norconex.com']);
              _gaq.push(['_trackPageview']);
              (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
              })();
            </script>
            <a style="font-size: 1.4em;" target="_top" href="https://github.com/norconex/importer/issues">Submit an Issue</a>
            &nbsp;&nbsp;|&nbsp;&nbsp; 
            <a style="font-size: 1.4em;" target="_top" href="https://www.norconex.com">www.norconex.com</a>
            ]]>
          </footer>
          <show>protected</show>
          <detectLinks>false</detectLinks>
          <links>
            <link>https://tika.apache.org/${tika.version}/api/</link>
            <link>https://www.norconex.com/product/commons-lang/apidocs/</link>
          </links>
          <source>1.8</source>
          <excludePackageNames>org.apache.tika.*</excludePackageNames>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <configuration>
            </configuration>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>  

  <organization>
  	<name>Norconex Inc.</name>
  	<url>https://www.norconex.com</url>
  </organization>
  <url>https://norconex.com/collectors/importer</url>
  <description>Norconex Importer is a Java library and command-line application meant to &quot;parse&quot; and &quot;extract&quot; content out of a computer file as plain text, whatever its format (HTML, PDF, Word, etc). In addition, it allows you to perform any manipulation on the extracted text before importing/using it in your own service or application.</description>
  <issueManagement>
  	<system>GitHub</system>
  	<url>https://github.com/Norconex/importer/issues</url>
  </issueManagement>
  <scm>
    <url>https://github.com/Norconex/importer</url>
    <connection>scm:git:git@github.com:Norconex/importer.git</connection>
    <developerConnection>scm:git:git@github.com:Norconex/importer.git</developerConnection>
  </scm>

  <developers>
    <developer>
        <id>essiembre</id>
        <name>Pascal Essiembre</name>
        <email>pascal.essiembre@norconex.com</email>
        <organization>Norconex Inc.</organization>
        <organizationUrl>https://www.norconex.com</organizationUrl>
        <roles>
          <role>project leader</role>
          <role>developer</role>
        </roles>
        <timezone>-4</timezone>
    </developer>
  </developers>
  <contributors>
  </contributors>

</project>